{"version":3,"file":"static/js/451.f4b2808b.chunk.js","mappings":"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","sources":["components/Home.jsx","components/LoadMore.jsx","components/MovieCard.jsx","components/hooks/useFetch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport MovieCard from './MovieCard';\nimport LoadMore from './LoadMore';\nimport useFetch from './hooks/useFetch';\nimport { usePageContext } from './context/PageContext';\n\nconst IMDB_API_KEY = '9d52264b8376313698d7d20c165a8537';\nconst IMDB_URL = 'https://api.themoviedb.org';\n\nconst Home = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const { setModalData } = usePageContext();\n  const trendingUrl = `${IMDB_URL}/3/trending/movie/day?api_key=${IMDB_API_KEY}&page=${currentPage}`;\n  const { data: trendingMovies, loading, error } = useFetch(trendingUrl);\n//   const navigate = useNavigate();\n\n  useEffect(() => {\n    if (trendingMovies) {\n      setTotalPages(trendingMovies.total_pages);\n    }\n    return () => {\n        localStorage.removeItem('moviesState');\n      };\n  }, [trendingMovies]);\n\n  const handleLoadMore = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading movies.</p>;\n\n  return (\n    <div className=\"home\">\n      <div className=\"gallery\">\n        {trendingMovies.results.map(movie => (\n          <Link key={movie.id} to={`/movies/${movie.id}`} state={{ from: '/' }}>\n            <MovieCard movie={movie} setModalData={setModalData} />\n          </Link>\n        ))}\n      </div>\n      <LoadMore currentPage={currentPage} totalPages={totalPages} onLoadMore={handleLoadMore} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst LoadMore = ({ currentPage, totalPages, onLoadMore }) => {\n  return (\n    <div className=\"load-more\">\n      <button\n        disabled={currentPage >= totalPages}\n        onClick={onLoadMore}\n      >\n        Load More\n      </button>\n    </div>\n  );\n};\n\nexport default LoadMore;\n","import React from 'react';\n\nconst MovieCard = ({ movie, setModalData }) => {\n  const handleClick = () => {\n    setModalData(movie);\n  };\n\n  return (\n    <div className=\"card\" onClick={handleClick}>\n      <img\n        className=\"card_img\"\n        src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <p className=\"card_title\">\n        {movie.title} <br />\n        <span className=\"card_text\">\n          {movie.release_date}\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!url) return; // Add this check to ensure URL is valid\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return { data, loading, error };\n};\n\nexport default useFetch;\n"],"names":["_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","totalPages","setTotalPages","setModalData","usePageContext","trendingUrl","concat","_useFetch","useFetch","trendingMovies","data","loading","error","useEffect","total_pages","localStorage","removeItem","_jsx","children","_jsxs","className","results","map","movie","Link","to","id","state","from","MovieCard","LoadMore","onLoadMore","prevPage","_ref","disabled","onClick","src","poster_path","alt","title","release_date","url","setData","setLoading","_useState5","_useState6","setError","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","t0","finish","stop","apply","arguments"],"sourceRoot":""}