{"version":3,"file":"static/js/681.b884c4c9.chunk.js","mappings":"mLA6BA,UAtBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAU,GAAAC,OAJD,6BAIe,aAAAA,OAAYH,EAAO,qBAAAG,OAL9B,oCAMnBC,GAA0CC,EAAAA,EAAAA,GAASH,GAArCI,EAAOF,EAAbG,KAAeC,EAAOJ,EAAPI,QAASC,EAAKL,EAALK,MAEhC,OAAID,GAAgBE,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eACnBF,GAAcC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4BAGnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASF,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAA,MAAAC,SACGL,EAAQQ,QAAQC,KAAI,SAAAC,GAAM,OACzBN,EAAAA,EAAAA,KAAA,MAAAC,UACEC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAIK,EAAOC,OAAO,KAAGD,EAAOE,YADrBF,EAAOG,GAEX,QAKf,C,gFCCA,IAzBiB,SAACC,GAChB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Bd,EAAIgB,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAArClB,EAAOmB,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,GAA0BP,EAAAA,EAAAA,UAAS,MAAKQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAjCpB,EAAKqB,EAAA,GAAEC,EAAQD,EAAA,GAmBtB,OAjBAE,EAAAA,EAAAA,YAAU,WACR,GAAKZ,EAAL,CAEA,IAAMa,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAAA,IAAUtB,GAAK,KAAD,EAA/BkB,EAAQC,EAAAI,KACdlB,EAAQa,EAAS/B,MAAMgC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEvBR,EAAQQ,EAAAK,IAAM,QAEI,OAFJL,EAAAC,KAAA,GAEdZ,GAAW,GAAOW,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,wBAErB,kBATc,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAWff,GAbgB,CAclB,GAAG,CAACb,IAEG,CAAEb,KAAAA,EAAMC,QAAAA,EAASC,MAAAA,EAC1B,C","sources":["components/Reviews.jsx","components/hooks/useFetch.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport useFetch from './hooks/useFetch';\n\nconst IMDB_API_KEY = '9d52264b8376313698d7d20c165a8537';\nconst IMDB_URL = 'https://api.themoviedb.org';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const reviewsUrl = `${IMDB_URL}/3/movie/${movieId}/reviews?api_key=${IMDB_API_KEY}`;\n  const { data: reviews, loading, error } = useFetch(reviewsUrl);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading reviews.</p>;\n\n  return (\n    <div className=\"reviews\">\n      <h3>Reviews</h3>\n      <ul>\n        {reviews.results.map(review => (\n          <li key={review.id}>\n            <p>{review.author}: {review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!url) return; // Add this check to ensure URL is valid\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return { data, loading, error };\n};\n\nexport default useFetch;\n"],"names":["movieId","useParams","reviewsUrl","concat","_useFetch","useFetch","reviews","data","loading","error","_jsx","children","_jsxs","className","results","map","review","author","content","id","url","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setLoading","_useState5","_useState6","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","t0","finish","stop","apply","arguments"],"sourceRoot":""}